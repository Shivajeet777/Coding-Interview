package com.sss;

import java.util.ArrayList;
import java.util.List;

public class finalsss {

	public static void main(String[] args) 
	{
		
		/*=================Question1)============ REVERSE A STRING =================*/
		
		
	/*	String str ="hello";
		
		char [] ch = str.toCharArray();
		
		StringBuilder out = new StringBuilder();
		
		for(int i=ch.length-1;i>=0;i--)
		{
			out.append(ch[i]);
		}
		
		System.out.println(out);  */
		
		
		/*=================Question2)============ SWAP TWO NUMBERS =================*/
		
	/*	int a =10;
		int b =20;
		a = a+b;
		b =a-b;
		a =a-b;
		
		System.out.println(a);
		System.out.println(b);   */
		

		/*=================Question3)============ CONTAINS VOWELS ==================*/
		
		
	/*	 String input = "hlla";
		 
		 input.toLowerCase();
		 
		 boolean hasVowel =false;
		 
		 for(int i=0;i<input.length();i++)
		 {
			 char ch = input.charAt(i);
			 
			 if(ch=='a' || ch=='e' || ch=='i' || ch=='o' || ch=='u')
			 {
				 hasVowel = true;
			 }
			 
			 
		 }
		 
		 if(hasVowel)
		 {
			 System.out.println("contains");
		 }
		 else
		 {
			 System.out.println("Not Contains");
		 }
		
		
		
		*/
		
		

		/*=================Question4)============ CHECK PRIME NUMBER ===============*/
		
		
		            /*        int num = 17;
		                    
		                    boolean isPrime = false;
		                    
		                    for(int i=2;i<=Math.sqrt(num);i++)
		                    {
		                    	if(num %i==0)
		                    	{
		                    		isPrime = true;
		                    	}
		                    }
		                    
		                    if(isPrime)
		                    {
		                    	System.out.println("Not Prime");
		                    }
		                    else
		                    {
		                    	System.out.println("Prime");
		                    }
		                    
		                    */
		
		
		

		/*=================Question5)============ FIBONACCI SERIES =================*/
		
		    /*        int count = 10;
		            int a =0;
		            int b =1;
		            
		            for(int i=1;i<count ;i++)
		            {
		            	System.out.print(a);
		            	
		            	if(i<count)
		            	{
		            		System.out.print(",");
		            	}
		            	
		            	int next = a+b;
		            	a =b;
		            	b= next;
		            	
		            }
		            
		            
		            */
		            
		           
		               
		              
		

		/*=================Question6)============ INTEGER CONTAINS ONLY ODD NUMBERS =*/
		
		  /*  List<Integer> list = Arrays.asList(22,4,6,8);
		    
		    boolean isOdd = true;
		    
		 for(int num:list)
		 {
			 if(num%2==0)
			 {
				 isOdd = false;
			 }
		 }
		 
		 
		 if(isOdd)
		 {
			 System.out.println("list contains odd");
		 }
		 else
		 {
			 System.out.println("list does not contains odd");
		 }
		 
		 
		 */
		
		

		/*=================Question7)============ CHECK PALINDROME =================*/
		
		
	/*	String str = "MadaMs";
		
		boolean isPalindrome = true;
		
		for(int i=0;i<str.length()/2;i++)
		{
			
			if(str.charAt(i)!=str.charAt(str.length()-i-1))
			{
				isPalindrome = false;
			}
			
		}
		
		if(isPalindrome)
		{
			System.out.println("Palindrome");
		}
		else
		{
			System.out.println("Not Palindrome");
		}
		
		
		*/
		
		
		
		

		/*=================Question8)============ REMOVE WHITESPACE ================*/
		
		
		
	/*	 String datas = "  Hello \t World \n Java  ";
		 
		 StringBuilder out = new StringBuilder();
		 
		 char[] ch = datas.toCharArray();
		 
		 for(int i=0;i<ch.length;i++)
		 {
			 if(!Character.isWhitespace(ch[i]))
			 {
				 out.append(ch[i]);
			 }
		 }
		 
		 System.out.println(out);   */
		
		
		
		

		/*=================Question9)============ ARMSTRONG NUMBER =================*/
		
		
		/*      int number=153;
		      
		      int countDigit = String.valueOf(number).length();
		      
		      int sum =0;
		      
		      boolean isArmStrong = false;
		      
		       int orignalNumber = number ;
		       
		      while(number!=0)
		      {
		    	  int lastDigit = number%10;
		    	    sum += Math.pow(lastDigit, countDigit);
		    	    number = number/10;
		      }
		      
		      System.out.println(sum);
		      
		      if(sum==orignalNumber)
		      {
		    	  System.out.println("aRMSTRONG");
		      }
		      else
		      {
		    	  System.out.println("Not ArmStrong");
		      }
		     
		     
		     */
		
		
		

		/*=================Question10)=========== FACTORIAL ========================*/
		
		         /*   int n =5;
		             int fact =1;
		             
		             for(int i=1;i<=n;i++)
		             {
		            	 fact = fact*i;
		             }
		             
		             System.out.println(fact);   */
		

		/*=================Question11)=========== FIND A PERFECT NUMBER ============*/
		
		
		/*	int number = 28;
			
			int sum =1;
			
			for(int i=2;i<Math.sqrt(number);i++)
			{
				if(number % i==0)
				{
					sum = sum+i;
					
					int pair = number/i;
					
					if(pair!=i)
					{
						sum = sum+pair;
					}
				}
			}
			
			System.out.println(sum);   */
			
		    
		

		/*=================Question12)=========== COUNT NUMBER OF DIGITS ===========*/
			
		/*	int num= 123456;
			
			int count =0;
			
			while(num!=0)
			{
				num = num/10;
				count++;
			}
			
			System.out.println(count);   */
			
			
			
			
			
			
			/*========Question 13: Count the number of digits in a number===========*/
		
		         

			/*========Question 14: Reverse a number===========*/
			
		/*	int number =123456;
			
			int reversed =0;
			
			while(number!=0)
			{
				int lastDigit = number % 10;
				reversed = reversed *10 + lastDigit;
				number = number/10;
			}
			
			System.out.println(reversed);  */
			
			
			

			/*========Question 15: Find GCD and LCM of two numbers===========*/
		          
		          /*   int a =28;
		             int b =12;
		             
		             while(b!=0)
		             {
		            	 int temp = b;
		            	  b = a%b;
		            	  a =temp;
		            	 
		             }
		             
		             System.out.println(a);
		             
		             System.out.println(28*12/a);   */
		           
		   

			/*========Question 16: Check if a number is Automorphic===========*/
		             
		           /*     int num =625;
		                
		                int square = num * num ;
		                
		                int countDigit = String.valueOf(num).length();
		                
		                if(square%Math.pow(10, countDigit)==num)
		                {
		                	System.out.println("Automorphic");
		                }
		                
		                else
		                {
		                	System.out.println("Non-Automorhic");
		                }   */
		             
		             

			/*========Question 17: Check if a number is a Harshad number===========*/
		
		
		               /*     int num =12;
		                    
		                    int temp =num;
		                    
		                    int sum =0;
		                    
		                    while(temp!=0)
		                    {
		                    	sum += temp%10;
		                    	temp = temp/10;
		                    }
		                    
		                    System.out.println(sum);
		                    
		                    if(num%sum==0)
		                    {
		                    	System.out.println("Harshad Number ");
		                    }
		                    else
		                    {
		                    	System.out.println("Not HarshadNumber");
		                    }   */
		
		
			
			
		
		/*========Array-based Question===========*/
		
		/*==========Question01=========*/
		// Find the largest and smallest elements in an array
		
		
	/*	 int [] data = {1,2,3,8,5,6};
		 int largest =data[0];
		 
		   for(int i=0;i<data.length;i++)
		   {
			   if(data[i]>largest)
			   {
				   largest=data[i];
			   }
		   }
		   System.out.println(largest);
		   
		   
		   int smallest = data[0];
		   
		   for(int i=0;i<data.length;i++)
		   {
			   if(data[i]<smallest)
			   {
				   smallest = data[i];
			   }
		   }
		   
		   System.out.println(smallest);    */
		  
		

		/*==========Question2 - Sort an array (using Bubble Sort / Arrays.sort) =========*/
		
		
		/*     int[] arr = {64, 25, 12, 22, 11};
		     
		     for(int i=0;i<arr.length-1;i++)
		     {
		    	 for(int j=0;j<arr.length-i-1;j++)
		    	 {
		    		 if(arr[j]>arr[j+1])
		    		 {
		    			 int temp= arr[j];
		    			 arr[j] = arr[j+1];
		    			 arr[j+1] = temp;
		    		 }
		    	 }
		    	 
		    	 
		     }
		     
		     for(int data:arr)
				   {
					   System.out.print(data + " ");
				   }
				   
				   
				   */
		
		

		/*==========Question3 - Find duplicate elements in an array =========*/
		
	/*	int[] arr = {4, 2, 7, 2, 4, 8, 3, 1, 3,4};
		
		List<Integer> unique = new ArrayList<>();
		
		for(int i=0;i<arr.length;i++)
		{
			if(!unique.contains(arr[i]))
			{
				unique.add(arr[i]);
			}
		}
		
		for(int num:unique)
		{
			System.out.println(num);
		}
		
		
		*/
		
		
		
		

		/*==========Question4 - Reverse an array =========*/
		
		/*   int[] arr = {11, 2, 7, 1, 9};
		   
		   int start = 0;
		   
		   int end = arr.length-1;
		   
		   while(start<end)
		   {
			   int temp=arr[start];
			   arr[start] = arr[end];
			   arr[end] = temp;
			   
			   start++;
			   end--;
			   
		   }
		   
		   for(int num:arr)
		   {
			   System.out.println(num);
		   }
		   
		   */
		
		

		/*==========Question5 - Rotate an array (left/right) =========*/
		
		 /*     int[] arr = {10, 20, 30, 40, 50};
		      
		      int k = 3;
		      
		      for(int i=k;i<arr.length;i++)
		      {
		    	  System.out.println(arr[i]);
		      }
		      
		      for(int i=0;i<k;i++)
		      {
		    	  System.out.println(arr[i]);
		      }
		      
		      
		      
		      */
		/*Right-Rotation*/
		 
		
		   
		
		

		/*==========Question6 - Find the second largest element in array =========*/
		
		
	/*	 int[] arr = {10, 25, 40, 5, 70, 70};
		 
		 int largest =0;
		 int secondLargest=0;
		 
		  for(int num:arr)
		  {
			  if(num>largest)
			  {
				  secondLargest = largest;
				  largest = num;
			  }
		  }
		  
		  System.out.println(largest);
		  System.out.println(secondLargest);   */
		 

		/*==========Question7 - Find pairs with given sum =========*/
		
		 int[] arr = {2, 7, 4, 5, 9, 1, 3};
		 
		 int given = 10;
		 
		 for(int i=0;i<arr.length;i++)
		 {
			 if(arr[i]+arr[i+1]==given)
			 {
				 
			 }
		 }
		 
		 
		 
		 
		 
		

		/*==========Question8 - Merge two arrays =========*/

		/*==========Question9 - Remove duplicates from array =========*/

		/*==========Question10 - Find the missing number in an array (1 to n) =========*/
		
		/*==========String-based-Java Question =========*/
		
		
		/*==========Question1 - Reverse a string =========*/

		/*==========Question2 - Check if a string is a palindrome =========*/

		/*==========Question3 - Count vowels and consonants =========*/

		/*==========Question4 - Count the number of words =========*/

		/*==========Question5 - Check if two strings are anagrams =========*/

		/*==========Question6 - Remove duplicate characters from a string =========*/

		/*==========Question7 - Find the first non-repeated character =========*/

		/*==========Question8 - Count the frequency of characters in a string =========*/

		/*==========Question9 - Find the longest word in a string =========*/

		/*==========Question10 - Convert string to title case (capitalize each word) =========*/
		
		
		

		

	}

}
